package defpackage;

import com.apprichtap.haptic.base.PrebakedEffectId;
import com.google.android.gms.wearable.WearableStatusCodes;
import com.huawei.android.airsharing.api.IEventListener;
import com.huawei.hms.support.api.entity.auth.AuthCode;
import com.huawei.login.ui.login.MainLoginCallBack;
import java.util.HashMap;
import java.util.Map;

/* loaded from: classes6.dex */
public final class mgw {

    /* renamed from: a, reason: collision with root package name */
    private static final Map<Integer, mgr> f14987a;

    static {
        HashMap hashMap = new HashMap(64, 1.0f);
        f14987a = hashMap;
        hashMap.put(1001, mgr.db);
        hashMap.put(1002, mgr.v);
        hashMap.put(1003, mgr.u);
        hashMap.put(1004, mgr.x);
        hashMap.put(1005, mgr.y);
        hashMap.put(2001, mgr.dh);
        hashMap.put(2002, mgr.cg);
        hashMap.put(2003, mgr.cd);
        hashMap.put(2004, mgr.cc);
        hashMap.put(2005, mgr.cl);
        hashMap.put(2007, mgr.ce);
        hashMap.put(2008, mgr.ap);
        hashMap.put(2009, mgr.ar);
        hashMap.put(2010, mgr.bf);
        hashMap.put(2011, mgr.bg);
        hashMap.put(9004, mgr.ao);
        hashMap.put(9005, mgr.aq);
        hashMap.put(3001, mgr.f123do);
        hashMap.put(3002, mgr.dn);
        hashMap.put(3003, mgr.bl);
        hashMap.put(Integer.valueOf(IEventListener.EVENT_ID_DEVICE_CONN_FAIL), mgr.bj);
        hashMap.put(Integer.valueOf(IEventListener.EVENT_ID_DEVICE_DISCONN_SUCC), mgr.bp);
        hashMap.put(Integer.valueOf(IEventListener.EVENT_ID_DEVICE_SCAN_FINISH), mgr.cs);
        hashMap.put(Integer.valueOf(IEventListener.EVENT_ID_DEVICE_RTSP_CONN), mgr.cv);
        hashMap.put(Integer.valueOf(IEventListener.EVENT_ID_DEVICE_UPDATE), mgr.bn);
        hashMap.put(3009, mgr.bi);
        hashMap.put(3010, mgr.dm);
        hashMap.put(4001, mgr.dj);
        hashMap.put(4002, mgr.al);
        hashMap.put(Integer.valueOf(WearableStatusCodes.DATA_ITEM_TOO_LARGE), mgr.ak);
        hashMap.put(Integer.valueOf(WearableStatusCodes.INVALID_TARGET_NODE), mgr.bm);
        hashMap.put(4006, mgr.an);
        hashMap.put(4007, mgr.ad);
        hashMap.put(Integer.valueOf(WearableStatusCodes.WIFI_CREDENTIAL_SYNC_NO_CREDENTIAL_FETCHED), mgr.ai);
        hashMap.put(4013, mgr.ah);
        hashMap.put(4014, mgr.aj);
        hashMap.put(4012, mgr.cw);
        hashMap.put(4011, mgr.cy);
        hashMap.put(4009, mgr.bo);
        hashMap.put(4010, mgr.br);
        hashMap.put(5001, mgr.bq);
        hashMap.put(Integer.valueOf(AuthCode.StatusCode.CERT_FINGERPRINT_ERROR), mgr.dg);
        Integer valueOf = Integer.valueOf(AuthCode.StatusCode.PERMISSION_NOT_AUTHORIZED);
        hashMap.put(valueOf, mgr.dd);
        hashMap.put(Integer.valueOf(AuthCode.StatusCode.PERMISSION_EXPIRED), mgr.cu);
        hashMap.put(8001, mgr.cn);
        hashMap.put(8002, mgr.ck);
        hashMap.put(Integer.valueOf(MainLoginCallBack.MSG_SHOW_HMS_DIALOG), mgr.co);
        hashMap.put(Integer.valueOf(MainLoginCallBack.MSG_START_APK_SERVICE_ERROR), mgr.ch);
        hashMap.put(Integer.valueOf(MainLoginCallBack.MSG_HWID_ACCOUNT_NOT_LOGIN), mgr.cj);
        hashMap.put(Integer.valueOf(MainLoginCallBack.MSG_NO_NETWORK), mgr.ct);
        hashMap.put(Integer.valueOf(MainLoginCallBack.MSG_HMS_VERSION_ERROR), mgr.ci);
        hashMap.put(9001, mgr.ag);
        hashMap.put(9002, mgr.df);
        hashMap.put(10015, mgr.du);
        hashMap.put(9003, mgr.dg);
        hashMap.put(valueOf, mgr.dd);
        hashMap.put(9009, mgr.ab);
        hashMap.put(9010, mgr.g);
        hashMap.put(10001, mgr.at);
        hashMap.put(10002, mgr.ax);
        hashMap.put(10003, mgr.z);
        hashMap.put(10004, mgr.c);
        hashMap.put(10005, mgr.d);
        hashMap.put(10006, mgr.e);
        hashMap.put(10007, mgr.f14983a);
        hashMap.put(10008, mgr.i);
        hashMap.put(10009, mgr.j);
        hashMap.put(10010, mgr.h);
        hashMap.put(10011, mgr.f);
        hashMap.put(10012, mgr.b);
        hashMap.put(10013, mgr.dq);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_LIGHTNING), mgr.dp);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_CALENDAR_DATE), mgr.dl);
        hashMap.put(10016, mgr.ac);
        hashMap.put(10017, mgr.cm);
        hashMap.put(10018, mgr.cp);
        hashMap.put(10019, mgr.cr);
        hashMap.put(10020, mgr.cq);
        hashMap.put(10021, mgr.bv);
        hashMap.put(10022, mgr.cf);
        hashMap.put(10023, mgr.by);
        hashMap.put(10024, mgr.cb);
        hashMap.put(10025, mgr.ca);
        hashMap.put(10026, mgr.bk);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_SPEED_UP), mgr.bh);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_JUMP), mgr.di);
        hashMap.put(10029, mgr.de);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_COIN_DROP), mgr.am);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_HEARTBEAT), mgr.aa);
        hashMap.put(10032, mgr.cx);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_DRAWING_ARROW), mgr.as);
        hashMap.put(10034, mgr.bx);
        hashMap.put(10035, mgr.aw);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_SNIPER_RIFLE), mgr.q);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_ASSAULT_RIFLE), mgr.au);
        hashMap.put(10038, mgr.av);
        hashMap.put(10039, mgr.af);
        hashMap.put(10050, mgr.dk);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_FAST_MOVING), mgr.ae);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_FLY), mgr.w);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_FOOTSTEP), mgr.cz);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_ICE), mgr.da);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_SPRING), mgr.dc);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_SWING), mgr.bd);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_WIND), mgr.bs);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_VICTORY), mgr.be);
        hashMap.put(Integer.valueOf(PrebakedEffectId.RT_AWARD), mgr.s);
        hashMap.put(10051, mgr.o);
        hashMap.put(10052, mgr.n);
        hashMap.put(10053, mgr.l);
        hashMap.put(10054, mgr.m);
        hashMap.put(10055, mgr.p);
        hashMap.put(10056, mgr.t);
        hashMap.put(10057, mgr.r);
        hashMap.put(10058, mgr.k);
        hashMap.put(10059, mgr.bu);
        hashMap.put(10060, mgr.bw);
        hashMap.put(10061, mgr.bt);
        hashMap.put(10062, mgr.bz);
        hashMap.put(10063, mgr.az);
        hashMap.put(10064, mgr.bc);
        hashMap.put(10065, mgr.ba);
        hashMap.put(10066, mgr.ay);
        hashMap.put(10067, mgr.bb);
    }

    public static mgr b(int i) {
        return f14987a.get(Integer.valueOf(i));
    }
}
